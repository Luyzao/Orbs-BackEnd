generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid())
  name              String
  avatarUrl         String?
  balance           Balance?
  expenses          Expense[]
  ExpenseAnalysis   ExpenseAnalysis[]
  FinancialAnalysis FinancialAnalysis[]
  Forms             Forms?
  goals             Goal[]
  Income            Income[]
  IncomeSummary     IncomeSummary[]
}

model Expense {
  id                 String   @id @default(uuid())
  title              String
  amount             Float
  date               DateTime
  isCredit           Boolean  @default(false)
  totalInstallments  Int?
  currentInstallment Int?
  categoryId         String
  userId             String
  category           Category @relation(fields: [categoryId], references: [id])
  user               User     @relation(fields: [userId], references: [id])
}

model Category {
  id       String    @id @default(uuid())
  name     String    @unique
  color    String?
  expenses Expense[]
}

model Goal {
  id        String     @id @default(uuid())
  title     String
  target    Float
  progress  Float      @default(0)
  status    GoalStatus @default(PENDING)
  userId    String
  createdAt DateTime   @default(now())
  category  String?
  imageUrl  String?
  user      User       @relation(fields: [userId], references: [id])
}

model Balance {
  id        String   @id @default(uuid())
  value     Float
  userId    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model ExpenseAnalysis {
  id                  String   @id
  userId              String
  total               Float
  categoriaMaiorGasto Float
  diferencamensal     Float
  createdAt           DateTime
  User                User     @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model FinancialAnalysis {
  id        String   @id
  userId    String
  month     Int
  year      Int
  data      Json
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Forms {
  id                String   @id
  media_salarial    String
  idade             String
  quantidade_filhos String
  dinheiro          String
  createdAt         DateTime @default(now())
  userId            String   @unique
  User              User     @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Income {
  id          String   @id
  date        DateTime
  userId      String
  income      Float
  extraincome Float
  otherincome Float
  month       DateTime
  User        User     @relation(fields: [userId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model IncomeSummary {
  id           String   @id
  userId       String
  total        Float
  impostoRenda Float
  createdAt    DateTime
  month        DateTime
  User         User     @relation(fields: [userId], references: [id])
}

enum GoalStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}
